[INFO] Scanning source directory: /home/bhsus/sqlite/
[INFO] Scanning 795 files for structs with function pointers...
[FOUND] Struct sqlite3_io_methods in sqlite3.c has 54 function pointers
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
[FOUND] Struct sqlite3_vfs in sqlite3.c has 45 function pointers
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        const char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
[FOUND] Struct sqlite3_mem_methods in sqlite3.c has 21 function pointers
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
[FOUND] Struct sqlite3_module in sqlite3.c has 69 function pointers
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
[FOUND] Struct sqlite3_mutex_methods in sqlite3.c has 27 function pointers
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
[FOUND] Struct sqlite3_pcache_methods2 in sqlite3.c has 33 function pointers
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
[FOUND] Struct sqlite3_pcache_methods in sqlite3.c has 30 function pointers
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
[FOUND] Struct sqlite3_rtree_geometry in sqlite3.c has 3 function pointers
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
[FOUND] Struct sqlite3_rtree_query_info in sqlite3.c has 3 function pointers
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
[FOUND] Struct Fts5ExtensionApi in sqlite3.c has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in sqlite3.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in sqlite3.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in sqlite3.c has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct BusyHandler in sqlite3.c has 3 function pointers
        int (*xBusyHandler)(void *,int)
        int (*xBusyHandler)(void *,int)
        int (*xBusyHandler)(void *,int)
[FOUND] Struct sqlite3 in sqlite3.c has 39 function pointers
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        ifndef SQLITE_OMIT_DEPRECATED
  void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        unsigned int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        ifndef SQLITE_OMIT_WAL
  int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        endif
  void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        ifndef SQLITE_OMIT_PROGRESS_CALLBACK
  int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        ifndef SQLITE_OMIT_DEPRECATED
  void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        unsigned int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        ifndef SQLITE_OMIT_WAL
  int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        endif
  void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        ifndef SQLITE_OMIT_PROGRESS_CALLBACK
  int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
[FOUND] Struct FuncDef in sqlite3.c has 12 function pointers
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct FuncDestructor in sqlite3.c has 3 function pointers
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
[FOUND] Struct Module in sqlite3.c has 3 function pointers
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
[FOUND] Struct CollSeq in sqlite3.c has 6 function pointers
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
[FOUND] Struct ParseCleanup in sqlite3.c has 3 function pointers
        void (*xCleanup)(sqlite3*,void*)
        void (*xCleanup)(sqlite3*,void*)
        void (*xCleanup)(sqlite3*,void*)
[FOUND] Struct Sqlite3Config in sqlite3.c has 15 function pointers
        void (*xLog)(void*,int,const char*)
        ifdef SQLITE_ENABLE_SQLLOG
  void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        ifndef SQLITE_UNTESTABLE
  int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
        void (*xLog)(void*,int,const char*)
        ifdef SQLITE_ENABLE_SQLLOG
  void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        ifndef SQLITE_UNTESTABLE
  int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
        void (*xLog)(void*,int,const char*)
        void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
[FOUND] Struct Walker in sqlite3.c has 9 function pointers
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
[FOUND] Struct DbClientData in sqlite3.c has 3 function pointers
        void (*xDestructor)(void*)
        void (*xDestructor)(void*)
        void (*xDestructor)(void*)
[FOUND] Struct sqlite3_value in sqlite3.c has 3 function pointers
        void (*xDel)(void*)
        void (*xDel)(void*)
        void (*xDel)(void*)
[FOUND] Struct AuxData in sqlite3.c has 3 function pointers
        void (*xDeleteAux)(void*)
        void (*xDeleteAux)(void*)
        void (*xDeleteAux)(void*)
[FOUND] Struct BenignMallocHooks in sqlite3.c has 6 function pointers
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
[FOUND] Struct mem in sqlite3.c has 3 function pointers
        void (*xBacktrace)(int, int, void **)
        void (*xBacktrace)(int, int, void **)
        void (*xBacktrace)(int, int, void **)
[FOUND] Struct SQLiteThread in sqlite3.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SQLiteThread in sqlite3.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SQLiteThread in sqlite3.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct sqlite3_kvvfs_methods in sqlite3.c has 9 function pointers
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
[FOUND] Struct PCache in sqlite3.c has 3 function pointers
        int (*xStress)(void*,PgHdr*)
        int (*xStress)(void*,PgHdr*)
        int (*xStress)(void*,PgHdr*)
[FOUND] Struct Pager in sqlite3.c has 9 function pointers
        int (*xBusyHandler)(void*)
        endif
  void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
        int (*xBusyHandler)(void*)
        endif
  void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
        int (*xBusyHandler)(void*)
        void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
[FOUND] Struct MemPage in sqlite3.c has 6 function pointers
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
[FOUND] Struct BtShared in sqlite3.c has 3 function pointers
        void (*xFreeSchema)(void*)
        void (*xFreeSchema)(void*)
        void (*xFreeSchema)(void*)
[FOUND] Struct sqlite3_api_routines in sqlite3.c has 693 function pointers
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        const char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        const void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        const char * (*column_database_name)(sqlite3_stmt*,int)
        const void * (*column_database_name16)(sqlite3_stmt*,int)
        const char * (*column_decltype)(sqlite3_stmt*,int i)
        const void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        const char * (*column_name)(sqlite3_stmt*,int)
        const void * (*column_name16)(sqlite3_stmt*,int)
        const char * (*column_origin_name)(sqlite3_stmt*,int)
        const void * (*column_origin_name16)(sqlite3_stmt*,int)
        const char * (*column_table_name)(sqlite3_stmt*,int)
        const void * (*column_table_name16)(sqlite3_stmt*,int)
        const unsigned char * (*column_text)(sqlite3_stmt*,int iCol)
        const void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        const char * (*errmsg)(sqlite3*)
        const void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        const char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        const void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        const unsigned char * (*value_text)(sqlite3_value*)
        const void * (*value_text16)(sqlite3_value*)
        const void * (*value_text16be)(sqlite3_value*)
        const void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        const char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        const char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        const char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        const char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        const char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        const char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        const char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        const char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        const char * (*uri_key)(const char*,int)
        const char * (*filename_database)(const char*)
        const char * (*filename_journal)(const char*)
        const char * (*filename_wal)(const char*)
        const char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        unsigned char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        const char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
[FOUND] Struct sqlite3_tokenizer_module in sqlite3.c has 18 function pointers
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
[FOUND] Struct Overloaded in sqlite3.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct RtreeConstraint in sqlite3.c has 6 function pointers
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
[FOUND] Struct RtreeGeomCallback in sqlite3.c has 9 function pointers
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
[FOUND] Struct aFunc in sqlite3.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct aAgg in sqlite3.c has 6 function pointers
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
[FOUND] Struct IcuScalar in sqlite3.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct sqlite3rbu in sqlite3.c has 3 function pointers
        int (*xRename)(void*, const char*, const char*)
        int (*xRename)(void*, const char*, const char*)
        int (*xRename)(void*, const char*, const char*)
[FOUND] Struct SessionHook in sqlite3.c has 12 function pointers
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
[FOUND] Struct sqlite3_session in sqlite3.c has 3 function pointers
        int (*xTableFilter)(void *pCtx, const char *zTab)
        int (*xTableFilter)(void *pCtx, const char *zTab)
        int (*xTableFilter)(void *pCtx, const char *zTab)
[FOUND] Struct SessionInput in sqlite3.c has 3 function pointers
        int (*xInput)(void*, void*, int*)
        int (*xInput)(void*, void*, int*)
        int (*xInput)(void*, void*, int*)
[FOUND] Struct Fts5ExtensionApi in sqlite3.c has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in sqlite3.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in sqlite3.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in sqlite3.c has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct Builtin in sqlite3.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5ExprNode in sqlite3.c has 3 function pointers
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
[FOUND] Struct Fts5ExprFunc in sqlite3.c has 3 function pointers
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct Fts5SegIter in sqlite3.c has 3 function pointers
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
[FOUND] Struct Fts5Iter in sqlite3.c has 3 function pointers
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
[FOUND] Struct PrefixSetupCtx in sqlite3.c has 6 function pointers
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
[FOUND] Struct Fts5Auxiliary in sqlite3.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5TokenizerModule in sqlite3.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5Auxdata in sqlite3.c has 3 function pointers
        void (*xDelete)(void*)
        void (*xDelete)(void*)
        void (*xDelete)(void*)
[FOUND] Struct PorterContext in sqlite3.c has 3 function pointers
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
[FOUND] Struct PorterRule in sqlite3.c has 3 function pointers
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
[FOUND] Struct sqlite3_io_methods in sqltclsh.c has 54 function pointers
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
[FOUND] Struct sqlite3_vfs in sqltclsh.c has 45 function pointers
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        const char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
[FOUND] Struct sqlite3_mem_methods in sqltclsh.c has 21 function pointers
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
[FOUND] Struct sqlite3_module in sqltclsh.c has 69 function pointers
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
[FOUND] Struct sqlite3_mutex_methods in sqltclsh.c has 27 function pointers
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
[FOUND] Struct sqlite3_pcache_methods2 in sqltclsh.c has 33 function pointers
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
[FOUND] Struct sqlite3_pcache_methods in sqltclsh.c has 30 function pointers
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
[FOUND] Struct sqlite3_rtree_geometry in sqltclsh.c has 3 function pointers
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
[FOUND] Struct sqlite3_rtree_query_info in sqltclsh.c has 3 function pointers
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
[FOUND] Struct Fts5ExtensionApi in sqltclsh.c has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in sqltclsh.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in sqltclsh.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in sqltclsh.c has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct BusyHandler in sqltclsh.c has 3 function pointers
        int (*xBusyHandler)(void *,int)
        int (*xBusyHandler)(void *,int)
        int (*xBusyHandler)(void *,int)
[FOUND] Struct sqlite3 in sqltclsh.c has 39 function pointers
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        ifndef SQLITE_OMIT_DEPRECATED
  void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        unsigned int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        ifndef SQLITE_OMIT_WAL
  int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        endif
  void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        ifndef SQLITE_OMIT_PROGRESS_CALLBACK
  int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        ifndef SQLITE_OMIT_DEPRECATED
  void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        unsigned int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        ifndef SQLITE_OMIT_WAL
  int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        endif
  void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        ifndef SQLITE_OMIT_PROGRESS_CALLBACK
  int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
[FOUND] Struct FuncDef in sqltclsh.c has 12 function pointers
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct FuncDestructor in sqltclsh.c has 3 function pointers
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
[FOUND] Struct Module in sqltclsh.c has 3 function pointers
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
[FOUND] Struct CollSeq in sqltclsh.c has 6 function pointers
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
[FOUND] Struct ParseCleanup in sqltclsh.c has 3 function pointers
        void (*xCleanup)(sqlite3*,void*)
        void (*xCleanup)(sqlite3*,void*)
        void (*xCleanup)(sqlite3*,void*)
[FOUND] Struct Sqlite3Config in sqltclsh.c has 15 function pointers
        void (*xLog)(void*,int,const char*)
        ifdef SQLITE_ENABLE_SQLLOG
  void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        ifndef SQLITE_UNTESTABLE
  int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
        void (*xLog)(void*,int,const char*)
        ifdef SQLITE_ENABLE_SQLLOG
  void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        ifndef SQLITE_UNTESTABLE
  int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
        void (*xLog)(void*,int,const char*)
        void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
[FOUND] Struct Walker in sqltclsh.c has 9 function pointers
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
[FOUND] Struct DbClientData in sqltclsh.c has 3 function pointers
        void (*xDestructor)(void*)
        void (*xDestructor)(void*)
        void (*xDestructor)(void*)
[FOUND] Struct sqlite3_value in sqltclsh.c has 3 function pointers
        void (*xDel)(void*)
        void (*xDel)(void*)
        void (*xDel)(void*)
[FOUND] Struct AuxData in sqltclsh.c has 3 function pointers
        void (*xDeleteAux)(void*)
        void (*xDeleteAux)(void*)
        void (*xDeleteAux)(void*)
[FOUND] Struct BenignMallocHooks in sqltclsh.c has 6 function pointers
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
[FOUND] Struct mem in sqltclsh.c has 3 function pointers
        void (*xBacktrace)(int, int, void **)
        void (*xBacktrace)(int, int, void **)
        void (*xBacktrace)(int, int, void **)
[FOUND] Struct SQLiteThread in sqltclsh.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SQLiteThread in sqltclsh.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SQLiteThread in sqltclsh.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct sqlite3_kvvfs_methods in sqltclsh.c has 9 function pointers
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
[FOUND] Struct PCache in sqltclsh.c has 3 function pointers
        int (*xStress)(void*,PgHdr*)
        int (*xStress)(void*,PgHdr*)
        int (*xStress)(void*,PgHdr*)
[FOUND] Struct Pager in sqltclsh.c has 9 function pointers
        int (*xBusyHandler)(void*)
        endif
  void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
        int (*xBusyHandler)(void*)
        endif
  void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
        int (*xBusyHandler)(void*)
        void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
[FOUND] Struct MemPage in sqltclsh.c has 6 function pointers
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
[FOUND] Struct BtShared in sqltclsh.c has 3 function pointers
        void (*xFreeSchema)(void*)
        void (*xFreeSchema)(void*)
        void (*xFreeSchema)(void*)
[FOUND] Struct sqlite3_api_routines in sqltclsh.c has 693 function pointers
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        const char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        const void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        const char * (*column_database_name)(sqlite3_stmt*,int)
        const void * (*column_database_name16)(sqlite3_stmt*,int)
        const char * (*column_decltype)(sqlite3_stmt*,int i)
        const void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        const char * (*column_name)(sqlite3_stmt*,int)
        const void * (*column_name16)(sqlite3_stmt*,int)
        const char * (*column_origin_name)(sqlite3_stmt*,int)
        const void * (*column_origin_name16)(sqlite3_stmt*,int)
        const char * (*column_table_name)(sqlite3_stmt*,int)
        const void * (*column_table_name16)(sqlite3_stmt*,int)
        const unsigned char * (*column_text)(sqlite3_stmt*,int iCol)
        const void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        const char * (*errmsg)(sqlite3*)
        const void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        const char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        const void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        const unsigned char * (*value_text)(sqlite3_value*)
        const void * (*value_text16)(sqlite3_value*)
        const void * (*value_text16be)(sqlite3_value*)
        const void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        const char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        const char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        const char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        const char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        const char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        const char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        const char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        const char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        const char * (*uri_key)(const char*,int)
        const char * (*filename_database)(const char*)
        const char * (*filename_journal)(const char*)
        const char * (*filename_wal)(const char*)
        const char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        unsigned char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        const char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
[FOUND] Struct sqlite3_tokenizer_module in sqltclsh.c has 18 function pointers
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
[FOUND] Struct Overloaded in sqltclsh.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct RtreeConstraint in sqltclsh.c has 6 function pointers
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
[FOUND] Struct RtreeGeomCallback in sqltclsh.c has 9 function pointers
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
[FOUND] Struct aFunc in sqltclsh.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct aAgg in sqltclsh.c has 6 function pointers
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
[FOUND] Struct IcuScalar in sqltclsh.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct sqlite3rbu in sqltclsh.c has 3 function pointers
        int (*xRename)(void*, const char*, const char*)
        int (*xRename)(void*, const char*, const char*)
        int (*xRename)(void*, const char*, const char*)
[FOUND] Struct SessionHook in sqltclsh.c has 12 function pointers
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
[FOUND] Struct sqlite3_session in sqltclsh.c has 3 function pointers
        int (*xTableFilter)(void *pCtx, const char *zTab)
        int (*xTableFilter)(void *pCtx, const char *zTab)
        int (*xTableFilter)(void *pCtx, const char *zTab)
[FOUND] Struct SessionInput in sqltclsh.c has 3 function pointers
        int (*xInput)(void*, void*, int*)
        int (*xInput)(void*, void*, int*)
        int (*xInput)(void*, void*, int*)
[FOUND] Struct Fts5ExtensionApi in sqltclsh.c has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in sqltclsh.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in sqltclsh.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in sqltclsh.c has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct Builtin in sqltclsh.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5ExprNode in sqltclsh.c has 3 function pointers
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
[FOUND] Struct Fts5ExprFunc in sqltclsh.c has 3 function pointers
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct Fts5SegIter in sqltclsh.c has 3 function pointers
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
[FOUND] Struct Fts5Iter in sqltclsh.c has 3 function pointers
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
[FOUND] Struct PrefixSetupCtx in sqltclsh.c has 6 function pointers
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
[FOUND] Struct Fts5Auxiliary in sqltclsh.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5TokenizerModule in sqltclsh.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5Auxdata in sqltclsh.c has 3 function pointers
        void (*xDelete)(void*)
        void (*xDelete)(void*)
        void (*xDelete)(void*)
[FOUND] Struct PorterContext in sqltclsh.c has 3 function pointers
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
[FOUND] Struct PorterRule in sqltclsh.c has 3 function pointers
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
[FOUND] Struct Fts5ExtensionApi in fts5.c has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in fts5.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in fts5.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in fts5.c has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct Builtin in fts5.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5ExprNode in fts5.c has 3 function pointers
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
[FOUND] Struct Fts5ExprFunc in fts5.c has 3 function pointers
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct Fts5SegIter in fts5.c has 3 function pointers
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
[FOUND] Struct Fts5Iter in fts5.c has 3 function pointers
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
[FOUND] Struct PrefixSetupCtx in fts5.c has 6 function pointers
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
[FOUND] Struct Fts5Auxiliary in fts5.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5TokenizerModule in fts5.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5Auxdata in fts5.c has 3 function pointers
        void (*xDelete)(void*)
        void (*xDelete)(void*)
        void (*xDelete)(void*)
[FOUND] Struct PorterContext in fts5.c has 3 function pointers
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
[FOUND] Struct PorterRule in fts5.c has 3 function pointers
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
[FOUND] Struct sqlite3_io_methods in sqlite3_analyzer.c has 54 function pointers
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
[FOUND] Struct sqlite3_vfs in sqlite3_analyzer.c has 45 function pointers
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        const char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
[FOUND] Struct sqlite3_mem_methods in sqlite3_analyzer.c has 21 function pointers
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
[FOUND] Struct sqlite3_module in sqlite3_analyzer.c has 69 function pointers
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
[FOUND] Struct sqlite3_mutex_methods in sqlite3_analyzer.c has 27 function pointers
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
[FOUND] Struct sqlite3_pcache_methods2 in sqlite3_analyzer.c has 33 function pointers
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
[FOUND] Struct sqlite3_pcache_methods in sqlite3_analyzer.c has 30 function pointers
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
[FOUND] Struct sqlite3_rtree_geometry in sqlite3_analyzer.c has 3 function pointers
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
[FOUND] Struct sqlite3_rtree_query_info in sqlite3_analyzer.c has 3 function pointers
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
[FOUND] Struct Fts5ExtensionApi in sqlite3_analyzer.c has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in sqlite3_analyzer.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in sqlite3_analyzer.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in sqlite3_analyzer.c has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct BusyHandler in sqlite3_analyzer.c has 3 function pointers
        int (*xBusyHandler)(void *,int)
        int (*xBusyHandler)(void *,int)
        int (*xBusyHandler)(void *,int)
[FOUND] Struct sqlite3 in sqlite3_analyzer.c has 39 function pointers
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        ifndef SQLITE_OMIT_DEPRECATED
  void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        unsigned int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        ifndef SQLITE_OMIT_WAL
  int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        endif
  void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        ifndef SQLITE_OMIT_PROGRESS_CALLBACK
  int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        ifndef SQLITE_OMIT_DEPRECATED
  void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        unsigned int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        ifndef SQLITE_OMIT_WAL
  int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        endif
  void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        ifndef SQLITE_OMIT_PROGRESS_CALLBACK
  int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
[FOUND] Struct FuncDef in sqlite3_analyzer.c has 12 function pointers
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct FuncDestructor in sqlite3_analyzer.c has 3 function pointers
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
[FOUND] Struct Module in sqlite3_analyzer.c has 3 function pointers
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
[FOUND] Struct CollSeq in sqlite3_analyzer.c has 6 function pointers
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
[FOUND] Struct ParseCleanup in sqlite3_analyzer.c has 3 function pointers
        void (*xCleanup)(sqlite3*,void*)
        void (*xCleanup)(sqlite3*,void*)
        void (*xCleanup)(sqlite3*,void*)
[FOUND] Struct Sqlite3Config in sqlite3_analyzer.c has 15 function pointers
        void (*xLog)(void*,int,const char*)
        ifdef SQLITE_ENABLE_SQLLOG
  void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        ifndef SQLITE_UNTESTABLE
  int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
        void (*xLog)(void*,int,const char*)
        ifdef SQLITE_ENABLE_SQLLOG
  void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        ifndef SQLITE_UNTESTABLE
  int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
        void (*xLog)(void*,int,const char*)
        void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
[FOUND] Struct Walker in sqlite3_analyzer.c has 9 function pointers
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
[FOUND] Struct DbClientData in sqlite3_analyzer.c has 3 function pointers
        void (*xDestructor)(void*)
        void (*xDestructor)(void*)
        void (*xDestructor)(void*)
[FOUND] Struct sqlite3_value in sqlite3_analyzer.c has 3 function pointers
        void (*xDel)(void*)
        void (*xDel)(void*)
        void (*xDel)(void*)
[FOUND] Struct AuxData in sqlite3_analyzer.c has 3 function pointers
        void (*xDeleteAux)(void*)
        void (*xDeleteAux)(void*)
        void (*xDeleteAux)(void*)
[FOUND] Struct BenignMallocHooks in sqlite3_analyzer.c has 6 function pointers
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
[FOUND] Struct mem in sqlite3_analyzer.c has 3 function pointers
        void (*xBacktrace)(int, int, void **)
        void (*xBacktrace)(int, int, void **)
        void (*xBacktrace)(int, int, void **)
[FOUND] Struct SQLiteThread in sqlite3_analyzer.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SQLiteThread in sqlite3_analyzer.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SQLiteThread in sqlite3_analyzer.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct sqlite3_kvvfs_methods in sqlite3_analyzer.c has 9 function pointers
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
[FOUND] Struct PCache in sqlite3_analyzer.c has 3 function pointers
        int (*xStress)(void*,PgHdr*)
        int (*xStress)(void*,PgHdr*)
        int (*xStress)(void*,PgHdr*)
[FOUND] Struct Pager in sqlite3_analyzer.c has 9 function pointers
        int (*xBusyHandler)(void*)
        endif
  void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
        int (*xBusyHandler)(void*)
        endif
  void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
        int (*xBusyHandler)(void*)
        void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
[FOUND] Struct MemPage in sqlite3_analyzer.c has 6 function pointers
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
[FOUND] Struct BtShared in sqlite3_analyzer.c has 3 function pointers
        void (*xFreeSchema)(void*)
        void (*xFreeSchema)(void*)
        void (*xFreeSchema)(void*)
[FOUND] Struct sqlite3_api_routines in sqlite3_analyzer.c has 693 function pointers
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        const char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        const void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        const char * (*column_database_name)(sqlite3_stmt*,int)
        const void * (*column_database_name16)(sqlite3_stmt*,int)
        const char * (*column_decltype)(sqlite3_stmt*,int i)
        const void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        const char * (*column_name)(sqlite3_stmt*,int)
        const void * (*column_name16)(sqlite3_stmt*,int)
        const char * (*column_origin_name)(sqlite3_stmt*,int)
        const void * (*column_origin_name16)(sqlite3_stmt*,int)
        const char * (*column_table_name)(sqlite3_stmt*,int)
        const void * (*column_table_name16)(sqlite3_stmt*,int)
        const unsigned char * (*column_text)(sqlite3_stmt*,int iCol)
        const void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        const char * (*errmsg)(sqlite3*)
        const void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        const char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        const void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        const unsigned char * (*value_text)(sqlite3_value*)
        const void * (*value_text16)(sqlite3_value*)
        const void * (*value_text16be)(sqlite3_value*)
        const void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        const char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        const char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        const char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        const char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        const char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        const char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        const char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        const char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        const char * (*uri_key)(const char*,int)
        const char * (*filename_database)(const char*)
        const char * (*filename_journal)(const char*)
        const char * (*filename_wal)(const char*)
        const char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        unsigned char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        const char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
[FOUND] Struct sqlite3_tokenizer_module in sqlite3_analyzer.c has 18 function pointers
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
[FOUND] Struct Overloaded in sqlite3_analyzer.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct RtreeConstraint in sqlite3_analyzer.c has 6 function pointers
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
[FOUND] Struct RtreeGeomCallback in sqlite3_analyzer.c has 9 function pointers
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
[FOUND] Struct aFunc in sqlite3_analyzer.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct aAgg in sqlite3_analyzer.c has 6 function pointers
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
[FOUND] Struct IcuScalar in sqlite3_analyzer.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct sqlite3rbu in sqlite3_analyzer.c has 3 function pointers
        int (*xRename)(void*, const char*, const char*)
        int (*xRename)(void*, const char*, const char*)
        int (*xRename)(void*, const char*, const char*)
[FOUND] Struct SessionHook in sqlite3_analyzer.c has 12 function pointers
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
[FOUND] Struct sqlite3_session in sqlite3_analyzer.c has 3 function pointers
        int (*xTableFilter)(void *pCtx, const char *zTab)
        int (*xTableFilter)(void *pCtx, const char *zTab)
        int (*xTableFilter)(void *pCtx, const char *zTab)
[FOUND] Struct SessionInput in sqlite3_analyzer.c has 3 function pointers
        int (*xInput)(void*, void*, int*)
        int (*xInput)(void*, void*, int*)
        int (*xInput)(void*, void*, int*)
[FOUND] Struct Fts5ExtensionApi in sqlite3_analyzer.c has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in sqlite3_analyzer.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in sqlite3_analyzer.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in sqlite3_analyzer.c has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct Builtin in sqlite3_analyzer.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5ExprNode in sqlite3_analyzer.c has 3 function pointers
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
[FOUND] Struct Fts5ExprFunc in sqlite3_analyzer.c has 3 function pointers
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct Fts5SegIter in sqlite3_analyzer.c has 3 function pointers
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
[FOUND] Struct Fts5Iter in sqlite3_analyzer.c has 3 function pointers
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
[FOUND] Struct PrefixSetupCtx in sqlite3_analyzer.c has 6 function pointers
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
[FOUND] Struct Fts5Auxiliary in sqlite3_analyzer.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5TokenizerModule in sqlite3_analyzer.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5Auxdata in sqlite3_analyzer.c has 3 function pointers
        void (*xDelete)(void*)
        void (*xDelete)(void*)
        void (*xDelete)(void*)
[FOUND] Struct PorterContext in sqlite3_analyzer.c has 3 function pointers
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
[FOUND] Struct PorterRule in sqlite3_analyzer.c has 3 function pointers
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
[FOUND] Struct aFunc in shell.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct aFunc in shell.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct ReCompiled in shell.c has 3 function pointers
        unsigned (*xNextChar)(ReInput*)
        unsigned (*xNextChar)(ReInput*)
        unsigned (*xNextChar)(ReInput*)
[FOUND] Struct vfstrace_info in shell.c has 3 function pointers
        int (*xOut)(const char*, void*)
        int (*xOut)(const char*, void*)
        int (*xOut)(const char*, void*)
[FOUND] Struct sqlite3_recover in shell.c has 3 function pointers
        int (*xSql)(void*,const char*)
        int (*xSql)(void*,const char*)
        int (*xSql)(void*,const char*)
[FOUND] Struct Func in shell.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
[FOUND] Struct Jim_HashTableType in jimsh0.c has 18 function pointers
        unsigned int (*hashFunction)(const void *key)
        void * (*keyDup)(void *privdata, const void *key)
        void * (*valDup)(void *privdata, const void *obj)
        int (*keyCompare)(void *privdata, const void *key1, const void *key2)
        void (*keyDestructor)(void *privdata, void *key)
        void (*valDestructor)(void *privdata, void *obj)
        unsigned int (*hashFunction)(const void *key)
        void * (*keyDup)(void *privdata, const void *key)
        void * (*valDup)(void *privdata, const void *obj)
        int (*keyCompare)(void *privdata, const void *key1, const void *key2)
        void (*keyDestructor)(void *privdata, void *key)
        void (*valDestructor)(void *privdata, void *obj)
        int (*hashFunction)(const void *key)
        void * (*keyDup)(void *privdata, const void *key)
        void * (*valDup)(void *privdata, const void *obj)
        int (*keyCompare)(void *privdata, const void *key1, const void *key2)
        void (*keyDestructor)(void *privdata, void *key)
        void (*valDestructor)(void *privdata, void *obj)
[FOUND] Struct Jim_Interp in jimsh0.c has 3 function pointers
        int (*signal_set_result)(struct Jim_Interp *interp, jim_wide sigmask)
        int (*signal_set_result)(struct Jim_Interp *interp, jim_wide sigmask)
        int (*signal_set_result)(struct Jim_Interp *interp, jim_wide sigmask)
[FOUND] Struct JimAioFopsType in jimsh0.c has 15 function pointers
        int (*writer)(struct AioFile *af, const char *buf, int len)
        int (*reader)(struct AioFile *af, char *buf, int len, int pending)
        int (*error)(const struct AioFile *af)
        const char * (*strerror)(struct AioFile *af)
        int (*verify)(struct AioFile *af)
        int (*writer)(struct AioFile *af, const char *buf, int len)
        int (*reader)(struct AioFile *af, char *buf, int len, int pending)
        int (*error)(const struct AioFile *af)
        char * (*strerror)(struct AioFile *af)
        int (*verify)(struct AioFile *af)
        int (*writer)(struct AioFile *af, const char *buf, int len)
        int (*reader)(struct AioFile *af, char *buf, int len, int pending)
        int (*error)(const struct AioFile *af)
        char * (*strerror)(struct AioFile *af)
        int (*verify)(struct AioFile *af)
[FOUND] Struct lsort_info in jimsh0.c has 3 function pointers
        int (*subfn)(Jim_Obj **, Jim_Obj **)
        int (*subfn)(Jim_Obj **, Jim_Obj **)
        int (*subfn)(Jim_Obj **, Jim_Obj **)
[FOUND] Struct Jim_ExprOperator in jimsh0.c has 3 function pointers
        int (*funcop)(Jim_Interp *interp, struct JimExprNode *opnode)
        int (*funcop)(Jim_Interp *interp, struct JimExprNode *opnode)
        int (*funcop)(Jim_Interp *interp, struct JimExprNode *opnode)
[FOUND] Struct BenignMallocHooks in fault.c has 6 function pointers
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
[FOUND] Struct aFunc in geopoly.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct aAgg in geopoly.c has 6 function pointers
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
[FOUND] Struct IcuScalar in icu.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct SessionHook in sqlite3session.c has 12 function pointers
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
[FOUND] Struct sqlite3_session in sqlite3session.c has 3 function pointers
        int (*xTableFilter)(void *pCtx, const char *zTab)
        int (*xTableFilter)(void *pCtx, const char *zTab)
        int (*xTableFilter)(void *pCtx, const char *zTab)
[FOUND] Struct SessionInput in sqlite3session.c has 3 function pointers
        int (*xInput)(void*, void*, int*)
        int (*xInput)(void*, void*, int*)
        int (*xInput)(void*, void*, int*)
[FOUND] Struct sqlite3rbu in sqlite3rbu.c has 3 function pointers
        int (*xRename)(void*, const char*, const char*)
        int (*xRename)(void*, const char*, const char*)
        int (*xRename)(void*, const char*, const char*)
[FOUND] Struct mem in mem2.c has 3 function pointers
        void (*xBacktrace)(int, int, void **)
        void (*xBacktrace)(int, int, void **)
        void (*xBacktrace)(int, int, void **)
[FOUND] Struct PCache in pcache.c has 3 function pointers
        int (*xStress)(void*,PgHdr*)
        int (*xStress)(void*,PgHdr*)
        int (*xStress)(void*,PgHdr*)
[FOUND] Struct Fts5ExtensionApi in fts5.c has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in fts5.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in fts5.c has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in fts5.c has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct Builtin in fts5.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5ExprNode in fts5.c has 3 function pointers
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
[FOUND] Struct Fts5ExprFunc in fts5.c has 3 function pointers
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct Fts5SegIter in fts5.c has 3 function pointers
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
[FOUND] Struct Fts5Iter in fts5.c has 3 function pointers
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
[FOUND] Struct PrefixSetupCtx in fts5.c has 6 function pointers
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
[FOUND] Struct Fts5Auxiliary in fts5.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5TokenizerModule in fts5.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5Auxdata in fts5.c has 3 function pointers
        void (*xDelete)(void*)
        void (*xDelete)(void*)
        void (*xDelete)(void*)
[FOUND] Struct PorterContext in fts5.c has 3 function pointers
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
[FOUND] Struct PorterRule in fts5.c has 3 function pointers
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
[FOUND] Struct Overloaded in fts3.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct aFunc in shell.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct aFunc in shell.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct ReCompiled in shell.c has 3 function pointers
        unsigned (*xNextChar)(ReInput*)
        unsigned (*xNextChar)(ReInput*)
        unsigned (*xNextChar)(ReInput*)
[FOUND] Struct vfstrace_info in shell.c has 3 function pointers
        int (*xOut)(const char*, void*)
        int (*xOut)(const char*, void*)
        int (*xOut)(const char*, void*)
[FOUND] Struct sqlite3_recover in shell.c has 3 function pointers
        int (*xSql)(void*,const char*)
        int (*xSql)(void*,const char*)
        int (*xSql)(void*,const char*)
[FOUND] Struct Func in shell.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
[FOUND] Struct SQLiteThread in threads.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SQLiteThread in threads.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SQLiteThread in threads.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct Pager in pager.c has 9 function pointers
        int (*xBusyHandler)(void*)
        endif
  void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
        int (*xBusyHandler)(void*)
        endif
  void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
        int (*xBusyHandler)(void*)
        void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
[FOUND] Struct sqlite3_kvvfs_methods in os_kv.c has 9 function pointers
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
[FOUND] Struct RtreeConstraint in rtree.c has 6 function pointers
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
[FOUND] Struct RtreeGeomCallback in rtree.c has 9 function pointers
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
[FOUND] Struct quotaGroup in test_quota.c has 6 function pointers
        void (*xCallback)(/* Callback invoked when going over quota */
     const char *zFilename,         /* Name of file whose size increases */
     sqlite3_int64 *piLimit,        /* IN/OUT: The current limit */
     sqlite3_int64 iSize,           /* Total size of all files in the group */
     void *pArg                     /* Client data */)
        void (*xDestroy)(void*)
        void (*xCallback)(/* Callback invoked when going over quota */
     const char *zFilename,         /* Name of file whose size increases */
     sqlite3_int64 *piLimit,        /* IN/OUT: The current limit */
     sqlite3_int64 iSize,           /* Total size of all files in the group */
     void *pArg                     /* Client data */)
        void (*xDestroy)(void*)
        void (*xCallback)(/* Callback invoked when going over quota */
     const char *zFilename,         /* Name of file whose size increases */
     sqlite3_int64 *piLimit,        /* IN/OUT: The current limit */
     sqlite3_int64 iSize,           /* Total size of all files in the group */
     void *pArg                     /* Client data */)
        void (*xDestroy)(void*)
[FOUND] Struct sqlite3_intarray in test_intarray.c has 3 function pointers
        void (*xFree)(void*)
        void (*xFree)(void*)
        void (*xFree)(void*)
[FOUND] Struct BenignMallocHooks in fault.c has 6 function pointers
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
[FOUND] Struct aFuncs in test_func.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
[FOUND] Struct aExtension in test1.c has 3 function pointers
        int (*pInit)(sqlite3*,char**,const sqlite3_api_routines*)
        int (*pInit)(sqlite3*,char**,const sqlite3_api_routines*)
        int (*pInit)(sqlite3*,char**,const sqlite3_api_routines*)
[FOUND] Struct TclCmd in test_thread.c has 3 function pointers
        int (*xProc)(void*, Tcl_Interp*, int, Tcl_Obj*const*)
        int (*xProc)(void*, Tcl_Interp*, int, Tcl_Obj*const*)
        int (*xProc)(void*, Tcl_Interp*, int, Tcl_Obj*const*)
[FOUND] Struct mem in mem2.c has 3 function pointers
        void (*xBacktrace)(int, int, void **)
        void (*xBacktrace)(int, int, void **)
        void (*xBacktrace)(int, int, void **)
[FOUND] Struct PCache in pcache.c has 3 function pointers
        int (*xStress)(void*,PgHdr*)
        int (*xStress)(void*,PgHdr*)
        int (*xStress)(void*,PgHdr*)
[FOUND] Struct Thread in test4.c has 3 function pointers
        void (*xOp)(Thread*)
        void (*xOp)(Thread*)
        void (*xOp)(Thread*)
[FOUND] Struct SQLiteThread in threads.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SQLiteThread in threads.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SQLiteThread in threads.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SuperlockBusy in test_superlock.c has 3 function pointers
        int (*xBusy)(void*,int)
        int (*xBusy)(void*,int)
        int (*xBusy)(void*,int)
[FOUND] Struct Pager in pager.c has 9 function pointers
        int (*xBusyHandler)(void*)
        endif
  void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
        int (*xBusyHandler)(void*)
        endif
  void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
        int (*xBusyHandler)(void*)
        void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
[FOUND] Struct sqlite3_kvvfs_methods in os_kv.c has 9 function pointers
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
[FOUND] Struct IcuScalar in icu.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct WasmTestStruct in sqlite3-wasm.c has 3 function pointers
        void (*xFunc)(void*)
        void (*xFunc)(void*)
        void (*xFunc)(void*)
[FOUND] Struct vtshim_aux in vtshim.c has 3 function pointers
        void (*xChildDestroy)(void*)
        void (*xChildDestroy)(void*)
        void (*xChildDestroy)(void*)
[FOUND] Struct aFunc in decimal.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct aFunc in urifuncs.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct ReCompiled in regexp.c has 3 function pointers
        unsigned (*xNextChar)(ReInput*)
        unsigned (*xNextChar)(ReInput*)
        unsigned (*xNextChar)(ReInput*)
[FOUND] Struct vfstrace_info in vfstrace.c has 3 function pointers
        int (*xOut)(const char*, void*)
        int (*xOut)(const char*, void*)
        int (*xOut)(const char*, void*)
[FOUND] Struct DState in dbdump.c has 3 function pointers
        int (*xCallback)(const char*,void*)
        int (*xCallback)(const char*,void*)
        int (*xCallback)(const char*,void*)
[FOUND] Struct aFunc in ieee754.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct carray_bind in carray.c has 3 function pointers
        void (*xDel)(void*)
        void (*xDel)(void*)
        void (*xDel)(void*)
[FOUND] Struct SessionHook in sqlite3session.c has 12 function pointers
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
[FOUND] Struct sqlite3_session in sqlite3session.c has 3 function pointers
        int (*xTableFilter)(void *pCtx, const char *zTab)
        int (*xTableFilter)(void *pCtx, const char *zTab)
        int (*xTableFilter)(void *pCtx, const char *zTab)
[FOUND] Struct SessionInput in sqlite3session.c has 3 function pointers
        int (*xInput)(void*, void*, int*)
        int (*xInput)(void*, void*, int*)
        int (*xInput)(void*, void*, int*)
[FOUND] Struct sqlite3rbu in sqlite3rbu.c has 3 function pointers
        int (*xRename)(void*, const char*, const char*)
        int (*xRename)(void*, const char*, const char*)
        int (*xRename)(void*, const char*, const char*)
[FOUND] Struct Overloaded in fts3.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct Fts5Auxiliary in fts5_main.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5TokenizerModule in fts5_main.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5Auxdata in fts5_main.c has 3 function pointers
        void (*xDelete)(void*)
        void (*xDelete)(void*)
        void (*xDelete)(void*)
[FOUND] Struct F5tTokenizerContext in fts5_tcl.c has 3 function pointers
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
[FOUND] Struct CallbackCtx in fts5_tcl.c has 3 function pointers
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
[FOUND] Struct OriginTextCb in fts5_tcl.c has 3 function pointers
        int (*xToken)(void *, int, const char *, int, int, int)
        int (*xToken)(void *, int, const char *, int, int, int)
        int (*xToken)(void *, int, const char *, int, int, int)
[FOUND] Struct PorterContext in fts5_tokenize.c has 3 function pointers
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
[FOUND] Struct PorterRule in fts5_tokenize.c has 3 function pointers
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
[FOUND] Struct Fts5ExprNode in fts5_expr.c has 3 function pointers
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
[FOUND] Struct Fts5ExprFunc in fts5_expr.c has 3 function pointers
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct Builtin in fts5_aux.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5SegIter in fts5_index.c has 3 function pointers
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
[FOUND] Struct Fts5Iter in fts5_index.c has 3 function pointers
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
[FOUND] Struct PrefixSetupCtx in fts5_index.c has 6 function pointers
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
[FOUND] Struct sqlite3_recover in sqlite3recover.c has 3 function pointers
        int (*xSql)(void*,const char*)
        int (*xSql)(void*,const char*)
        int (*xSql)(void*,const char*)
[FOUND] Struct Func in sqlite3recover.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
[FOUND] Struct aFunc in geopoly.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct aAgg in geopoly.c has 6 function pointers
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
[FOUND] Struct RtreeConstraint in rtree.c has 6 function pointers
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
[FOUND] Struct RtreeGeomCallback in rtree.c has 9 function pointers
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
[FOUND] Struct Stress2Ctx in tt3_stress.c has 3 function pointers
        void (*xProc)(Error*, Sqlite*, int)
        void (*xProc)(Error*, Sqlite*, int)
        void (*xProc)(Error*, Sqlite*, int)
[FOUND] Struct Stress2Task in tt3_stress.c has 3 function pointers
        void (*x)(Error*,Sqlite*,int)
        void (*x)(Error*,Sqlite*,int)
        void (*x)(Error*,Sqlite*,int)
[FOUND] Struct Thread in threadtest3.c has 3 function pointers
        endif
  char * (*xProc)(int, void*)
        char * (*xProc)(int, void*)
        char * (*xProc)(int, void*)
[FOUND] Struct ThreadTest in threadtest3.c has 3 function pointers
        void (*xTest)(int)
        void (*xTest)(int)
        void (*xTest)(int)
[FOUND] Struct Fts5ExtensionApi in fts5.h has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in fts5.h has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in fts5.h has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in fts5.h has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct sqlite3_api_routines in sqlite3ext.h has 693 function pointers
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        const char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        const void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        const char * (*column_database_name)(sqlite3_stmt*,int)
        const void * (*column_database_name16)(sqlite3_stmt*,int)
        const char * (*column_decltype)(sqlite3_stmt*,int i)
        const void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        const char * (*column_name)(sqlite3_stmt*,int)
        const void * (*column_name16)(sqlite3_stmt*,int)
        const char * (*column_origin_name)(sqlite3_stmt*,int)
        const void * (*column_origin_name16)(sqlite3_stmt*,int)
        const char * (*column_table_name)(sqlite3_stmt*,int)
        const void * (*column_table_name16)(sqlite3_stmt*,int)
        const unsigned char * (*column_text)(sqlite3_stmt*,int iCol)
        const void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        const char * (*errmsg)(sqlite3*)
        const void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        const char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        const void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        const unsigned char * (*value_text)(sqlite3_value*)
        const void * (*value_text16)(sqlite3_value*)
        const void * (*value_text16be)(sqlite3_value*)
        const void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        const char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        const char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        const char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        const char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        const char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        const char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        const char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        const char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        const char * (*uri_key)(const char*,int)
        const char * (*filename_database)(const char*)
        const char * (*filename_journal)(const char*)
        const char * (*filename_wal)(const char*)
        const char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        unsigned char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        const char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
[FOUND] Struct sqlite3_io_methods in sqlite3.h has 54 function pointers
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
[FOUND] Struct sqlite3_vfs in sqlite3.h has 45 function pointers
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        const char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
[FOUND] Struct sqlite3_mem_methods in sqlite3.h has 21 function pointers
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
[FOUND] Struct sqlite3_module in sqlite3.h has 69 function pointers
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
[FOUND] Struct sqlite3_mutex_methods in sqlite3.h has 27 function pointers
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
[FOUND] Struct sqlite3_pcache_methods2 in sqlite3.h has 33 function pointers
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
[FOUND] Struct sqlite3_pcache_methods in sqlite3.h has 30 function pointers
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
[FOUND] Struct sqlite3_rtree_geometry in sqlite3.h has 3 function pointers
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
[FOUND] Struct sqlite3_rtree_query_info in sqlite3.h has 3 function pointers
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
[FOUND] Struct Fts5ExtensionApi in sqlite3.h has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in sqlite3.h has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in sqlite3.h has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in sqlite3.h has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct MemPage in btreeInt.h has 6 function pointers
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
[FOUND] Struct BtShared in btreeInt.h has 3 function pointers
        void (*xFreeSchema)(void*)
        void (*xFreeSchema)(void*)
        void (*xFreeSchema)(void*)
[FOUND] Struct sqlite3_tokenizer_module in fts3_tokenizer.h has 18 function pointers
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
[FOUND] Struct Fts5ExtensionApi in fts5.h has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in fts5.h has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in fts5.h has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in fts5.h has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct sqlite3_api_routines in sqlite3ext.h has 693 function pointers
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        const char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        const void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        const char * (*column_database_name)(sqlite3_stmt*,int)
        const void * (*column_database_name16)(sqlite3_stmt*,int)
        const char * (*column_decltype)(sqlite3_stmt*,int i)
        const void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        const char * (*column_name)(sqlite3_stmt*,int)
        const void * (*column_name16)(sqlite3_stmt*,int)
        const char * (*column_origin_name)(sqlite3_stmt*,int)
        const void * (*column_origin_name16)(sqlite3_stmt*,int)
        const char * (*column_table_name)(sqlite3_stmt*,int)
        const void * (*column_table_name16)(sqlite3_stmt*,int)
        const unsigned char * (*column_text)(sqlite3_stmt*,int iCol)
        const void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        const char * (*errmsg)(sqlite3*)
        const void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        const char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        const void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        const unsigned char * (*value_text)(sqlite3_value*)
        const void * (*value_text16)(sqlite3_value*)
        const void * (*value_text16be)(sqlite3_value*)
        const void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        const char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        const char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        const char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        const char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        const char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        const char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        const char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        const char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        const char * (*uri_key)(const char*,int)
        const char * (*filename_database)(const char*)
        const char * (*filename_journal)(const char*)
        const char * (*filename_wal)(const char*)
        const char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        unsigned char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        const char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
[FOUND] Struct sqlite3_value in vdbeInt.h has 3 function pointers
        void (*xDel)(void*)
        void (*xDel)(void*)
        void (*xDel)(void*)
[FOUND] Struct AuxData in vdbeInt.h has 3 function pointers
        void (*xDeleteAux)(void*)
        void (*xDeleteAux)(void*)
        void (*xDeleteAux)(void*)
[FOUND] Struct sqlite3_io_methods in sqlite3.h has 54 function pointers
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
        int (*xClose)(sqlite3_file*)
        int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst)
        int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst)
        int (*xTruncate)(sqlite3_file*, sqlite3_int64 size)
        int (*xSync)(sqlite3_file*, int flags)
        int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize)
        int (*xLock)(sqlite3_file*, int)
        int (*xUnlock)(sqlite3_file*, int)
        int (*xCheckReservedLock)(sqlite3_file*, int *pResOut)
        int (*xFileControl)(sqlite3_file*, int op, void *pArg)
        int (*xSectorSize)(sqlite3_file*)
        int (*xDeviceCharacteristics)(sqlite3_file*)
        int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**)
        int (*xShmLock)(sqlite3_file*, int offset, int n, int flags)
        void (*xShmBarrier)(sqlite3_file*)
        int (*xShmUnmap)(sqlite3_file*, int deleteFlag)
        int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp)
        int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p)
[FOUND] Struct sqlite3_vfs in sqlite3.h has 45 function pointers
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        const char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
        int (*xOpen)(sqlite3_vfs*, sqlite3_filename zName, sqlite3_file*,
               int flags, int *pOutFlags)
        int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir)
        int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut)
        int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut)
        void * (*xDlOpen)(sqlite3_vfs*, const char *zFilename)
        void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg)
        void (*xDlClose)(sqlite3_vfs*, void*)
        int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut)
        int (*xSleep)(sqlite3_vfs*, int microseconds)
        int (*xCurrentTime)(sqlite3_vfs*, double*)
        int (*xGetLastError)(sqlite3_vfs*, int, char *)
        int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*)
        int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr)
        sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName)
        char * (*xNextSystemCall)(sqlite3_vfs*, const char *zName)
[FOUND] Struct sqlite3_mem_methods in sqlite3.h has 21 function pointers
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        void * (*xMalloc)(int)
        void (*xFree)(void*)
        void * (*xRealloc)(void*,int)
        int (*xSize)(void*)
        int (*xRoundup)(int)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
[FOUND] Struct sqlite3_module in sqlite3.h has 69 function pointers
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
        int (*xCreate)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xConnect)(sqlite3*, void *pAux,
               int argc, const char *const*argv,
               sqlite3_vtab **ppVTab, char**)
        int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*)
        int (*xDisconnect)(sqlite3_vtab *pVTab)
        int (*xDestroy)(sqlite3_vtab *pVTab)
        int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)
        int (*xClose)(sqlite3_vtab_cursor*)
        int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,
                int argc, sqlite3_value **argv)
        int (*xNext)(sqlite3_vtab_cursor*)
        int (*xEof)(sqlite3_vtab_cursor*)
        int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int)
        int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid)
        int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)
        int (*xBegin)(sqlite3_vtab *pVTab)
        int (*xSync)(sqlite3_vtab *pVTab)
        int (*xCommit)(sqlite3_vtab *pVTab)
        int (*xRollback)(sqlite3_vtab *pVTab)
        int (*xRename)(sqlite3_vtab *pVtab, const char *zNew)
        int (*xSavepoint)(sqlite3_vtab *pVTab, int)
        int (*xRelease)(sqlite3_vtab *pVTab, int)
        int (*xRollbackTo)(sqlite3_vtab *pVTab, int)
        int (*xShadowName)(const char*)
        int (*xIntegrity)(sqlite3_vtab *pVTab, const char *zSchema,
                    const char *zTabName, int mFlags, char **pzErr)
[FOUND] Struct sqlite3_mutex_methods in sqlite3.h has 27 function pointers
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
        int (*xMutexInit)(void)
        int (*xMutexEnd)(void)
        sqlite3_mutex * (*xMutexAlloc)(int)
        void (*xMutexFree)(sqlite3_mutex *)
        void (*xMutexEnter)(sqlite3_mutex *)
        int (*xMutexTry)(sqlite3_mutex *)
        void (*xMutexLeave)(sqlite3_mutex *)
        int (*xMutexHeld)(sqlite3_mutex *)
        int (*xMutexNotheld)(sqlite3_mutex *)
[FOUND] Struct sqlite3_pcache_methods2 in sqlite3.h has 33 function pointers
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int szExtra, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        sqlite3_pcache_page * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard)
        void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,
      unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        void (*xShrink)(sqlite3_pcache*)
[FOUND] Struct sqlite3_pcache_methods in sqlite3.h has 30 function pointers
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
        int (*xInit)(void*)
        void (*xShutdown)(void*)
        sqlite3_pcache * (*xCreate)(int szPage, int bPurgeable)
        void (*xCachesize)(sqlite3_pcache*, int nCachesize)
        int (*xPagecount)(sqlite3_pcache*)
        void * (*xFetch)(sqlite3_pcache*, unsigned key, int createFlag)
        void (*xUnpin)(sqlite3_pcache*, void*, int discard)
        void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey)
        void (*xTruncate)(sqlite3_pcache*, unsigned iLimit)
        void (*xDestroy)(sqlite3_pcache*)
[FOUND] Struct sqlite3_rtree_geometry in sqlite3.h has 3 function pointers
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
[FOUND] Struct sqlite3_rtree_query_info in sqlite3.h has 3 function pointers
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
[FOUND] Struct Fts5ExtensionApi in sqlite3.h has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*,
      int iPhrase, int iToken,
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in sqlite3.h has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in sqlite3.h has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in sqlite3.h has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct BusyHandler in sqliteInt.h has 3 function pointers
        int (*xBusyHandler)(void *,int)
        int (*xBusyHandler)(void *,int)
        int (*xBusyHandler)(void *,int)
[FOUND] Struct sqlite3 in sqliteInt.h has 39 function pointers
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        ifndef SQLITE_OMIT_DEPRECATED
  void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        unsigned int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        ifndef SQLITE_OMIT_WAL
  int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        endif
  void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        ifndef SQLITE_OMIT_PROGRESS_CALLBACK
  int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        ifndef SQLITE_OMIT_DEPRECATED
  void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        unsigned int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        ifndef SQLITE_OMIT_WAL
  int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        endif
  void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        ifndef SQLITE_OMIT_PROGRESS_CALLBACK
  int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
[FOUND] Struct FuncDef in sqliteInt.h has 12 function pointers
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct FuncDestructor in sqliteInt.h has 3 function pointers
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
[FOUND] Struct Module in sqliteInt.h has 3 function pointers
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
[FOUND] Struct CollSeq in sqliteInt.h has 6 function pointers
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
[FOUND] Struct ParseCleanup in sqliteInt.h has 3 function pointers
        void (*xCleanup)(sqlite3*,void*)
        void (*xCleanup)(sqlite3*,void*)
        void (*xCleanup)(sqlite3*,void*)
[FOUND] Struct Sqlite3Config in sqliteInt.h has 15 function pointers
        void (*xLog)(void*,int,const char*)
        ifdef SQLITE_ENABLE_SQLLOG
  void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        ifndef SQLITE_UNTESTABLE
  int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
        void (*xLog)(void*,int,const char*)
        ifdef SQLITE_ENABLE_SQLLOG
  void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        ifndef SQLITE_UNTESTABLE
  int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
        void (*xLog)(void*,int,const char*)
        void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
[FOUND] Struct Walker in sqliteInt.h has 9 function pointers
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
[FOUND] Struct DbClientData in sqliteInt.h has 3 function pointers
        void (*xDestructor)(void*)
        void (*xDestructor)(void*)
        void (*xDestructor)(void*)
[FOUND] Struct MemPage in btreeInt.h has 6 function pointers
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
[FOUND] Struct BtShared in btreeInt.h has 3 function pointers
        void (*xFreeSchema)(void*)
        void (*xFreeSchema)(void*)
        void (*xFreeSchema)(void*)
[FOUND] Struct sqlite3_api_routines in sqlite3ext.h has 693 function pointers
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        const char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        const void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        const char * (*column_database_name)(sqlite3_stmt*,int)
        const void * (*column_database_name16)(sqlite3_stmt*,int)
        const char * (*column_decltype)(sqlite3_stmt*,int i)
        const void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        const char * (*column_name)(sqlite3_stmt*,int)
        const void * (*column_name16)(sqlite3_stmt*,int)
        const char * (*column_origin_name)(sqlite3_stmt*,int)
        const void * (*column_origin_name16)(sqlite3_stmt*,int)
        const char * (*column_table_name)(sqlite3_stmt*,int)
        const void * (*column_table_name16)(sqlite3_stmt*,int)
        const unsigned char * (*column_text)(sqlite3_stmt*,int iCol)
        const void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        const char * (*errmsg)(sqlite3*)
        const void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        const char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        const void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        const unsigned char * (*value_text)(sqlite3_value*)
        const void * (*value_text16)(sqlite3_value*)
        const void * (*value_text16be)(sqlite3_value*)
        const void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        const char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        const char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        const char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        const char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        const char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        const char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        const char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        const char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        const char * (*uri_key)(const char*,int)
        const char * (*filename_database)(const char*)
        const char * (*filename_journal)(const char*)
        const char * (*filename_wal)(const char*)
        const char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        unsigned char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        const char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
[FOUND] Struct sqlite3_value in vdbeInt.h has 3 function pointers
        void (*xDel)(void*)
        void (*xDel)(void*)
        void (*xDel)(void*)
[FOUND] Struct AuxData in vdbeInt.h has 3 function pointers
        void (*xDeleteAux)(void*)
        void (*xDeleteAux)(void*)
        void (*xDeleteAux)(void*)
[FOUND] Struct BusyHandler in sqliteInt.h has 3 function pointers
        int (*xBusyHandler)(void *,int)
        int (*xBusyHandler)(void *,int)
        int (*xBusyHandler)(void *,int)
[FOUND] Struct sqlite3 in sqliteInt.h has 39 function pointers
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        ifndef SQLITE_OMIT_DEPRECATED
  void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        unsigned int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        ifndef SQLITE_OMIT_WAL
  int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        endif
  void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        ifndef SQLITE_OMIT_PROGRESS_CALLBACK
  int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        ifndef SQLITE_OMIT_DEPRECATED
  void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        unsigned int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        ifndef SQLITE_OMIT_WAL
  int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        endif
  void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        ifndef SQLITE_OMIT_PROGRESS_CALLBACK
  int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
[FOUND] Struct FuncDef in sqliteInt.h has 12 function pointers
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct FuncDestructor in sqliteInt.h has 3 function pointers
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
[FOUND] Struct Module in sqliteInt.h has 3 function pointers
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
[FOUND] Struct CollSeq in sqliteInt.h has 6 function pointers
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
[FOUND] Struct ParseCleanup in sqliteInt.h has 3 function pointers
        void (*xCleanup)(sqlite3*,void*)
        void (*xCleanup)(sqlite3*,void*)
        void (*xCleanup)(sqlite3*,void*)
[FOUND] Struct Sqlite3Config in sqliteInt.h has 15 function pointers
        void (*xLog)(void*,int,const char*)
        ifdef SQLITE_ENABLE_SQLLOG
  void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        ifndef SQLITE_UNTESTABLE
  int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
        void (*xLog)(void*,int,const char*)
        ifdef SQLITE_ENABLE_SQLLOG
  void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        ifndef SQLITE_UNTESTABLE
  int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
        void (*xLog)(void*,int,const char*)
        void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
[FOUND] Struct Walker in sqliteInt.h has 9 function pointers
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
[FOUND] Struct DbClientData in sqliteInt.h has 3 function pointers
        void (*xDestructor)(void*)
        void (*xDestructor)(void*)
        void (*xDestructor)(void*)
[FOUND] Struct sqlite3_tokenizer_module in fts3_tokenizer.h has 18 function pointers
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
[FOUND] Struct Fts5ExtensionApi in fts5.h has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in fts5.h has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in fts5.h has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in fts5.h has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct sqlite3_rtree_geometry in sqlite3rtree.h has 3 function pointers
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
[FOUND] Struct sqlite3_rtree_query_info in sqlite3rtree.h has 3 function pointers
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
[FOUND] Struct quotaGroup in test_quota.c has 6 function pointers
        void (*xCallback)(/* Callback invoked when going over quota */
     const char *zFilename,         /* Name of file whose size increases */
     sqlite3_int64 *piLimit,        /* IN/OUT: The current limit */
     sqlite3_int64 iSize,           /* Total size of all files in the group */
     void *pArg                     /* Client data */)
        void (*xDestroy)(void*)
        void (*xCallback)(/* Callback invoked when going over quota */
     const char *zFilename,         /* Name of file whose size increases */
     sqlite3_int64 *piLimit,        /* IN/OUT: The current limit */
     sqlite3_int64 iSize,           /* Total size of all files in the group */
     void *pArg                     /* Client data */)
        void (*xDestroy)(void*)
        void (*xCallback)(/* Callback invoked when going over quota */
     const char *zFilename,         /* Name of file whose size increases */
     sqlite3_int64 *piLimit,        /* IN/OUT: The current limit */
     sqlite3_int64 iSize,           /* Total size of all files in the group */
     void *pArg                     /* Client data */)
        void (*xDestroy)(void*)
[FOUND] Struct sqlite3_intarray in test_intarray.c has 3 function pointers
        void (*xFree)(void*)
        void (*xFree)(void*)
        void (*xFree)(void*)
[FOUND] Struct BenignMallocHooks in fault.c has 6 function pointers
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
        void (*xBenignBegin)(void)
        void (*xBenignEnd)(void)
[FOUND] Struct aFuncs in test_func.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
[FOUND] Struct aExtension in test1.c has 3 function pointers
        int (*pInit)(sqlite3*,char**,const sqlite3_api_routines*)
        int (*pInit)(sqlite3*,char**,const sqlite3_api_routines*)
        int (*pInit)(sqlite3*,char**,const sqlite3_api_routines*)
[FOUND] Struct TclCmd in test_thread.c has 3 function pointers
        int (*xProc)(void*, Tcl_Interp*, int, Tcl_Obj*const*)
        int (*xProc)(void*, Tcl_Interp*, int, Tcl_Obj*const*)
        int (*xProc)(void*, Tcl_Interp*, int, Tcl_Obj*const*)
[FOUND] Struct mem in mem2.c has 3 function pointers
        void (*xBacktrace)(int, int, void **)
        void (*xBacktrace)(int, int, void **)
        void (*xBacktrace)(int, int, void **)
[FOUND] Struct PCache in pcache.c has 3 function pointers
        int (*xStress)(void*,PgHdr*)
        int (*xStress)(void*,PgHdr*)
        int (*xStress)(void*,PgHdr*)
[FOUND] Struct Thread in test4.c has 3 function pointers
        void (*xOp)(Thread*)
        void (*xOp)(Thread*)
        void (*xOp)(Thread*)
[FOUND] Struct SQLiteThread in threads.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SQLiteThread in threads.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SQLiteThread in threads.c has 3 function pointers
        void * (*xTask)(void*)
        void * (*xTask)(void*)
        void * (*xTask)(void*)
[FOUND] Struct SuperlockBusy in test_superlock.c has 3 function pointers
        int (*xBusy)(void*,int)
        int (*xBusy)(void*,int)
        int (*xBusy)(void*,int)
[FOUND] Struct Pager in pager.c has 9 function pointers
        int (*xBusyHandler)(void*)
        endif
  void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
        int (*xBusyHandler)(void*)
        endif
  void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
        int (*xBusyHandler)(void*)
        void (*xReiniter)(DbPage*)
        int (*xGet)(Pager*,Pgno,DbPage**,int)
[FOUND] Struct sqlite3_kvvfs_methods in os_kv.c has 9 function pointers
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
        int (*xRead)(const char *zClass, const char *zKey, char *zBuf, int nBuf)
        int (*xWrite)(const char *zClass, const char *zKey, const char *zData)
        int (*xDelete)(const char *zClass, const char *zKey)
[FOUND] Struct MemPage in btreeInt.h has 6 function pointers
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
        u16 (*xCellSize)(MemPage*,u8*)
        void (*xParseCell)(MemPage*,u8*,CellInfo*)
[FOUND] Struct BtShared in btreeInt.h has 3 function pointers
        void (*xFreeSchema)(void*)
        void (*xFreeSchema)(void*)
        void (*xFreeSchema)(void*)
[FOUND] Struct sqlite3_api_routines in sqlite3ext.h has 693 function pointers
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        const char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        const void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        const char * (*column_database_name)(sqlite3_stmt*,int)
        const void * (*column_database_name16)(sqlite3_stmt*,int)
        const char * (*column_decltype)(sqlite3_stmt*,int i)
        const void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        const char * (*column_name)(sqlite3_stmt*,int)
        const void * (*column_name16)(sqlite3_stmt*,int)
        const char * (*column_origin_name)(sqlite3_stmt*,int)
        const void * (*column_origin_name16)(sqlite3_stmt*,int)
        const char * (*column_table_name)(sqlite3_stmt*,int)
        const void * (*column_table_name16)(sqlite3_stmt*,int)
        const unsigned char * (*column_text)(sqlite3_stmt*,int iCol)
        const void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        const char * (*errmsg)(sqlite3*)
        const void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        const char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        const void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        const unsigned char * (*value_text)(sqlite3_value*)
        const void * (*value_text16)(sqlite3_value*)
        const void * (*value_text16be)(sqlite3_value*)
        const void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        const char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        const char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        const char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        const char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        const char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        const char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        const char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        const char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        const char * (*uri_key)(const char*,int)
        const char * (*filename_database)(const char*)
        const char * (*filename_journal)(const char*)
        const char * (*filename_wal)(const char*)
        const char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        unsigned char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        const char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        unsigned int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
        void * (*aggregate_context)(sqlite3_context*,int nBytes)
        int (*aggregate_count)(sqlite3_context*)
        int (*bind_double)(sqlite3_stmt*,int,double)
        int (*bind_int)(sqlite3_stmt*,int,int)
        int (*bind_int64)(sqlite3_stmt*,int,sqlite_int64)
        int (*bind_null)(sqlite3_stmt*,int)
        int (*bind_parameter_count)(sqlite3_stmt*)
        int (*bind_parameter_index)(sqlite3_stmt*,const char*zName)
        char * (*bind_parameter_name)(sqlite3_stmt*,int)
        int (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*)
        int (*busy_timeout)(sqlite3*,int ms)
        int (*changes)(sqlite3*)
        int (*close)(sqlite3*)
        void * (*column_blob)(sqlite3_stmt*,int iCol)
        int (*column_bytes)(sqlite3_stmt*,int iCol)
        int (*column_bytes16)(sqlite3_stmt*,int iCol)
        int (*column_count)(sqlite3_stmt*pStmt)
        char * (*column_database_name)(sqlite3_stmt*,int)
        void * (*column_database_name16)(sqlite3_stmt*,int)
        char * (*column_decltype)(sqlite3_stmt*,int i)
        void * (*column_decltype16)(sqlite3_stmt*,int)
        double (*column_double)(sqlite3_stmt*,int iCol)
        int (*column_int)(sqlite3_stmt*,int iCol)
        sqlite_int64 (*column_int64)(sqlite3_stmt*,int iCol)
        char * (*column_name)(sqlite3_stmt*,int)
        void * (*column_name16)(sqlite3_stmt*,int)
        char * (*column_origin_name)(sqlite3_stmt*,int)
        void * (*column_origin_name16)(sqlite3_stmt*,int)
        char * (*column_table_name)(sqlite3_stmt*,int)
        void * (*column_table_name16)(sqlite3_stmt*,int)
        char * (*column_text)(sqlite3_stmt*,int iCol)
        void * (*column_text16)(sqlite3_stmt*,int iCol)
        int (*column_type)(sqlite3_stmt*,int iCol)
        sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol)
        int (*complete)(const char*sql)
        int (*complete16)(const void*sql)
        int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*)
        int (*data_count)(sqlite3_stmt*pStmt)
        sqlite3 * (*db_handle)(sqlite3_stmt*)
        int (*declare_vtab)(sqlite3*,const char*)
        int (*enable_shared_cache)(int)
        int (*errcode)(sqlite3*db)
        char * (*errmsg)(sqlite3*)
        void * (*errmsg16)(sqlite3*)
        int (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**)
        int (*expired)(sqlite3_stmt*)
        int (*finalize)(sqlite3_stmt*pStmt)
        void (*free)(void*)
        void (*free_table)(char**result)
        int (*get_autocommit)(sqlite3*)
        void * (*get_auxdata)(sqlite3_context*,int)
        int (*get_table)(sqlite3*,const char*,char***,int*,int*,char**)
        int (*global_recover)(void)
        void (*interruptx)(sqlite3*)
        sqlite_int64 (*last_insert_rowid)(sqlite3*)
        char * (*libversion)(void)
        int (*libversion_number)(void)
        void * (*malloc)(int)
        char * (*mprintf)(const char*,...)
        int (*open)(const char*,sqlite3**)
        int (*open16)(const void*,sqlite3**)
        int (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        void * (*realloc)(void*,int)
        int (*reset)(sqlite3_stmt*pStmt)
        void (*result_double)(sqlite3_context*,double)
        void (*result_error)(sqlite3_context*,const char*,int)
        void (*result_error16)(sqlite3_context*,const void*,int)
        void (*result_int)(sqlite3_context*,int)
        void (*result_int64)(sqlite3_context*,sqlite_int64)
        void (*result_null)(sqlite3_context*)
        void (*result_value)(sqlite3_context*,sqlite3_value*)
        char * (*xsnprintf)(int,char*,const char*,...)
        int (*step)(sqlite3_stmt*)
        int (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,
                                char const**,char const**,int*,int*,int*)
        void (*thread_cleanup)(void)
        int (*total_changes)(sqlite3*)
        int (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*)
        void * (*user_data)(sqlite3_context*)
        void * (*value_blob)(sqlite3_value*)
        int (*value_bytes)(sqlite3_value*)
        int (*value_bytes16)(sqlite3_value*)
        double (*value_double)(sqlite3_value*)
        int (*value_int)(sqlite3_value*)
        sqlite_int64 (*value_int64)(sqlite3_value*)
        int (*value_numeric_type)(sqlite3_value*)
        char * (*value_text)(sqlite3_value*)
        void * (*value_text16)(sqlite3_value*)
        void * (*value_text16be)(sqlite3_value*)
        void * (*value_text16le)(sqlite3_value*)
        int (*value_type)(sqlite3_value*)
        char * (*vmprintf)(const char*,va_list)
        int (*overload_function)(sqlite3*, const char *zFuncName, int nArg)
        int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**)
        int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**)
        int (*clear_bindings)(sqlite3_stmt*)
        int (*bind_zeroblob)(sqlite3_stmt*,int,int)
        int (*blob_bytes)(sqlite3_blob*)
        int (*blob_close)(sqlite3_blob*)
        int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,
                   int,sqlite3_blob**)
        int (*blob_read)(sqlite3_blob*,void*,int,int)
        int (*blob_write)(sqlite3_blob*,const void*,int,int)
        int (*file_control)(sqlite3*,const char*,int,void*)
        sqlite3_int64 (*memory_highwater)(int)
        sqlite3_int64 (*memory_used)(void)
        sqlite3_mutex * (*mutex_alloc)(int)
        void (*mutex_enter)(sqlite3_mutex*)
        void (*mutex_free)(sqlite3_mutex*)
        void (*mutex_leave)(sqlite3_mutex*)
        int (*mutex_try)(sqlite3_mutex*)
        int (*open_v2)(const char*,sqlite3**,int,const char*)
        int (*release_memory)(int)
        void (*result_error_nomem)(sqlite3_context*)
        void (*result_error_toobig)(sqlite3_context*)
        int (*sleep)(int)
        void (*soft_heap_limit)(int)
        sqlite3_vfs * (*vfs_find)(const char*)
        int (*vfs_register)(sqlite3_vfs*,int)
        int (*vfs_unregister)(sqlite3_vfs*)
        int (*xthreadsafe)(void)
        void (*result_zeroblob)(sqlite3_context*,int)
        void (*result_error_code)(sqlite3_context*,int)
        int (*test_control)(int, ...)
        void (*randomness)(int,void*)
        sqlite3 * (*context_db_handle)(sqlite3_context*)
        int (*extended_result_codes)(sqlite3*,int)
        int (*limit)(sqlite3*,int,int)
        sqlite3_stmt * (*next_stmt)(sqlite3*,sqlite3_stmt*)
        char * (*sql)(sqlite3_stmt*)
        int (*status)(int,int*,int*,int)
        int (*backup_finish)(sqlite3_backup*)
        sqlite3_backup * (*backup_init)(sqlite3*,const char*,sqlite3*,const char*)
        int (*backup_pagecount)(sqlite3_backup*)
        int (*backup_remaining)(sqlite3_backup*)
        int (*backup_step)(sqlite3_backup*,int)
        char * (*compileoption_get)(int)
        int (*compileoption_used)(const char*)
        int (*db_config)(sqlite3*,int,...)
        sqlite3_mutex * (*db_mutex)(sqlite3*)
        int (*db_status)(sqlite3*,int,int*,int*,int)
        int (*extended_errcode)(sqlite3*)
        void (*log)(int,const char*,...)
        sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64)
        char * (*sourceid)(void)
        int (*stmt_status)(sqlite3_stmt*,int,int)
        int (*strnicmp)(const char*,const char*,int)
        int (*wal_autocheckpoint)(sqlite3*,int)
        int (*wal_checkpoint)(sqlite3*,const char*)
        int (*blob_reopen)(sqlite3_blob*,sqlite3_int64)
        int (*vtab_config)(sqlite3*,int op,...)
        int (*vtab_on_conflict)(sqlite3*)
        int (*close_v2)(sqlite3*)
        char * (*db_filename)(sqlite3*,const char*)
        int (*db_readonly)(sqlite3*,const char*)
        int (*db_release_memory)(sqlite3*)
        char * (*errstr)(int)
        int (*stmt_busy)(sqlite3_stmt*)
        int (*stmt_readonly)(sqlite3_stmt*)
        int (*stricmp)(const char*,const char*)
        int (*uri_boolean)(const char*,const char*,int)
        sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64)
        char * (*uri_parameter)(const char*,const char*)
        char * (*xvsnprintf)(int,char*,const char*,va_list)
        int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*)
        int (*load_extension)(sqlite3*,const char*,const char*,char**)
        void * (*malloc64)(sqlite3_uint64)
        sqlite3_uint64 (*msize)(void*)
        void * (*realloc64)(void*,sqlite3_uint64)
        void (*reset_auto_extension)(void)
        int (*strglob)(const char*,const char*)
        sqlite3_value * (*value_dup)(const sqlite3_value*)
        void (*value_free)(sqlite3_value*)
        int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64)
        int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64)
        int (*value_subtype)(sqlite3_value*)
        void (*result_subtype)(sqlite3_context*,unsigned int)
        int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int)
        int (*strlike)(const char*,const char*,unsigned int)
        int (*db_cacheflush)(sqlite3*)
        int (*system_errno)(sqlite3*)
        char * (*expanded_sql)(sqlite3_stmt*)
        void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64)
        int (*prepare_v3)(sqlite3*,const char*,int,unsigned int,
                    sqlite3_stmt**,const char**)
        int (*prepare16_v3)(sqlite3*,const void*,int,unsigned int,
                      sqlite3_stmt**,const void**)
        void * (*value_pointer)(sqlite3_value*,const char*)
        int (*vtab_nochange)(sqlite3_context*)
        int (*value_nochange)(sqlite3_value*)
        char * (*vtab_collation)(sqlite3_index_info*,int)
        int (*keyword_count)(void)
        int (*keyword_name)(int,const char**,int*)
        int (*keyword_check)(const char*,int)
        sqlite3_str * (*str_new)(sqlite3*)
        char * (*str_finish)(sqlite3_str*)
        void (*str_appendf)(sqlite3_str*, const char *zFormat, ...)
        void (*str_vappendf)(sqlite3_str*, const char *zFormat, va_list)
        void (*str_append)(sqlite3_str*, const char *zIn, int N)
        void (*str_appendall)(sqlite3_str*, const char *zIn)
        void (*str_appendchar)(sqlite3_str*, int N, char C)
        void (*str_reset)(sqlite3_str*)
        int (*str_errcode)(sqlite3_str*)
        int (*str_length)(sqlite3_str*)
        char * (*str_value)(sqlite3_str*)
        char * (*normalized_sql)(sqlite3_stmt*)
        int (*stmt_isexplain)(sqlite3_stmt*)
        int (*value_frombind)(sqlite3_value*)
        int (*drop_modules)(sqlite3*,const char**)
        sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64)
        char * (*uri_key)(const char*,int)
        char * (*filename_database)(const char*)
        char * (*filename_journal)(const char*)
        char * (*filename_wal)(const char*)
        char * (*create_filename)(const char*,const char*,const char*,
                           int,const char**)
        void (*free_filename)(const char*)
        sqlite3_file * (*database_file_object)(const char*)
        int (*txn_state)(sqlite3*,const char*)
        sqlite3_int64 (*changes64)(sqlite3*)
        sqlite3_int64 (*total_changes64)(sqlite3*)
        int (*error_offset)(sqlite3*)
        int (*vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**)
        int (*vtab_distinct)(sqlite3_index_info*)
        int (*vtab_in)(sqlite3_index_info*,int,int)
        int (*vtab_in_first)(sqlite3_value*,sqlite3_value**)
        int (*vtab_in_next)(sqlite3_value*,sqlite3_value**)
        int (*deserialize)(sqlite3*,const char*,unsigned char*,
                     sqlite3_int64,sqlite3_int64,unsigned)
        char * (*serialize)(sqlite3*,const char *,sqlite3_int64*,
                              unsigned int)
        char * (*db_name)(sqlite3*,int)
        int (*value_encoding)(sqlite3_value*)
        int (*is_interrupted)(sqlite3*)
        int (*stmt_explain)(sqlite3_stmt*,int)
        void * (*get_clientdata)(sqlite3*,const char*)
        int (*setlk_timeout)(sqlite3*,int,int)
[FOUND] Struct sqlite3_value in vdbeInt.h has 3 function pointers
        void (*xDel)(void*)
        void (*xDel)(void*)
        void (*xDel)(void*)
[FOUND] Struct AuxData in vdbeInt.h has 3 function pointers
        void (*xDeleteAux)(void*)
        void (*xDeleteAux)(void*)
        void (*xDeleteAux)(void*)
[FOUND] Struct BusyHandler in sqliteInt.h has 3 function pointers
        int (*xBusyHandler)(void *,int)
        int (*xBusyHandler)(void *,int)
        int (*xBusyHandler)(void *,int)
[FOUND] Struct sqlite3 in sqliteInt.h has 39 function pointers
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        ifndef SQLITE_OMIT_DEPRECATED
  void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        unsigned int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        ifndef SQLITE_OMIT_WAL
  int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        endif
  void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        ifndef SQLITE_OMIT_PROGRESS_CALLBACK
  int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        ifndef SQLITE_OMIT_DEPRECATED
  void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        unsigned int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        ifndef SQLITE_OMIT_WAL
  int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        endif
  void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        ifndef SQLITE_OMIT_PROGRESS_CALLBACK
  int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
        void (*xLegacy)(void*,const char*)
        int (*xV2)(u32,void*,void*,void*)
        void (*xProfile)(void*,const char*,u64)
        int (*xCommitCallback)(void*)
        void (*xRollbackCallback)(void*)
        void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64)
        void (*xAutovacDestr)(void*)
        int (*xAutovacPages)(void*,const char*,u32,u32,u32)
        int (*xWalCallback)(void *, sqlite3 *, const char *, int)
        void (*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*)
        void (*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*)
        int (*xProgress)(void *)
        void (*xUnlockNotify)(void **, int)
[FOUND] Struct FuncDef in sqliteInt.h has 12 function pointers
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
        void (*xSFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinalize)(sqlite3_context*)
        void (*xValue)(sqlite3_context*)
        void (*xInverse)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct FuncDestructor in sqliteInt.h has 3 function pointers
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
[FOUND] Struct Module in sqliteInt.h has 3 function pointers
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
        void (*xDestroy)(void *)
[FOUND] Struct CollSeq in sqliteInt.h has 6 function pointers
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
        int (*xCmp)(void*,int, const void*, int, const void*)
        void (*xDel)(void*)
[FOUND] Struct ParseCleanup in sqliteInt.h has 3 function pointers
        void (*xCleanup)(sqlite3*,void*)
        void (*xCleanup)(sqlite3*,void*)
        void (*xCleanup)(sqlite3*,void*)
[FOUND] Struct Sqlite3Config in sqliteInt.h has 15 function pointers
        void (*xLog)(void*,int,const char*)
        ifdef SQLITE_ENABLE_SQLLOG
  void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        ifndef SQLITE_UNTESTABLE
  int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
        void (*xLog)(void*,int,const char*)
        ifdef SQLITE_ENABLE_SQLLOG
  void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        ifndef SQLITE_UNTESTABLE
  int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
        void (*xLog)(void*,int,const char*)
        void (*xSqllog)(void*,sqlite3*,const char*, int)
        void (*xVdbeBranch)(void*,unsigned iSrcLine,u8 eThis,u8 eMx)
        int (*xTestCallback)(int)
        int (*xAltLocaltime)(const void*,void*)
[FOUND] Struct Walker in sqliteInt.h has 9 function pointers
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
        int (*xExprCallback)(Walker*, Expr*)
        int (*xSelectCallback)(Walker*,Select*)
        void (*xSelectCallback2)(Walker*,Select*)
[FOUND] Struct DbClientData in sqliteInt.h has 3 function pointers
        void (*xDestructor)(void*)
        void (*xDestructor)(void*)
        void (*xDestructor)(void*)
[FOUND] Struct IcuScalar in icu.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct WasmTestStruct in sqlite3-wasm.c has 3 function pointers
        void (*xFunc)(void*)
        void (*xFunc)(void*)
        void (*xFunc)(void*)
[FOUND] Struct vtshim_aux in vtshim.c has 3 function pointers
        void (*xChildDestroy)(void*)
        void (*xChildDestroy)(void*)
        void (*xChildDestroy)(void*)
[FOUND] Struct aFunc in decimal.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct aFunc in urifuncs.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct ReCompiled in regexp.c has 3 function pointers
        unsigned (*xNextChar)(ReInput*)
        unsigned (*xNextChar)(ReInput*)
        unsigned (*xNextChar)(ReInput*)
[FOUND] Struct vfstrace_info in vfstrace.c has 3 function pointers
        int (*xOut)(const char*, void*)
        int (*xOut)(const char*, void*)
        int (*xOut)(const char*, void*)
[FOUND] Struct DState in dbdump.c has 3 function pointers
        int (*xCallback)(const char*,void*)
        int (*xCallback)(const char*,void*)
        int (*xCallback)(const char*,void*)
[FOUND] Struct aFunc in ieee754.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct carray_bind in carray.c has 3 function pointers
        void (*xDel)(void*)
        void (*xDel)(void*)
        void (*xDel)(void*)
[FOUND] Struct SessionHook in sqlite3session.c has 12 function pointers
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
        int (*xOld)(void*,int,sqlite3_value**)
        int (*xNew)(void*,int,sqlite3_value**)
        int (*xCount)(void*)
        int (*xDepth)(void*)
[FOUND] Struct sqlite3_session in sqlite3session.c has 3 function pointers
        int (*xTableFilter)(void *pCtx, const char *zTab)
        int (*xTableFilter)(void *pCtx, const char *zTab)
        int (*xTableFilter)(void *pCtx, const char *zTab)
[FOUND] Struct SessionInput in sqlite3session.c has 3 function pointers
        int (*xInput)(void*, void*, int*)
        int (*xInput)(void*, void*, int*)
        int (*xInput)(void*, void*, int*)
[FOUND] Struct sqlite3rbu in sqlite3rbu.c has 3 function pointers
        int (*xRename)(void*, const char*, const char*)
        int (*xRename)(void*, const char*, const char*)
        int (*xRename)(void*, const char*, const char*)
[FOUND] Struct Overloaded in fts3.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct Fts5Auxiliary in fts5_main.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5TokenizerModule in fts5_main.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5Auxdata in fts5_main.c has 3 function pointers
        void (*xDelete)(void*)
        void (*xDelete)(void*)
        void (*xDelete)(void*)
[FOUND] Struct F5tTokenizerContext in fts5_tcl.c has 3 function pointers
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
[FOUND] Struct CallbackCtx in fts5_tcl.c has 3 function pointers
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
[FOUND] Struct OriginTextCb in fts5_tcl.c has 3 function pointers
        int (*xToken)(void *, int, const char *, int, int, int)
        int (*xToken)(void *, int, const char *, int, int, int)
        int (*xToken)(void *, int, const char *, int, int, int)
[FOUND] Struct PorterContext in fts5_tokenize.c has 3 function pointers
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
        int (*xToken)(void*, int, const char*, int, int, int)
[FOUND] Struct PorterRule in fts5_tokenize.c has 3 function pointers
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
        int (*xCond)(char *zStem, int nStem)
[FOUND] Struct Fts5ExprNode in fts5_expr.c has 3 function pointers
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
        int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64)
[FOUND] Struct Fts5ExprFunc in fts5_expr.c has 3 function pointers
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
        void (*x)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct Builtin in fts5_aux.c has 3 function pointers
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
        void (*xDestroy)(void*)
[FOUND] Struct Fts5SegIter in fts5_index.c has 3 function pointers
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
        void (*xNext)(Fts5Index*, Fts5SegIter*, int*)
[FOUND] Struct Fts5Iter in fts5_index.c has 3 function pointers
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
        void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*)
[FOUND] Struct PrefixSetupCtx in fts5_index.c has 6 function pointers
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
        void (*xMerge)(Fts5Index*, Fts5Buffer*, int, Fts5Buffer*)
        void (*xAppend)(Fts5Index*, u64, Fts5Iter*, Fts5Buffer*)
[FOUND] Struct sqlite3_recover in sqlite3recover.c has 3 function pointers
        int (*xSql)(void*,const char*)
        int (*xSql)(void*,const char*)
        int (*xSql)(void*,const char*)
[FOUND] Struct Func in sqlite3recover.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value **)
[FOUND] Struct aFunc in geopoly.c has 3 function pointers
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
        void (*xFunc)(sqlite3_context*,int,sqlite3_value**)
[FOUND] Struct aAgg in geopoly.c has 6 function pointers
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
        void (*xStep)(sqlite3_context*,int,sqlite3_value**)
        void (*xFinal)(sqlite3_context*)
[FOUND] Struct RtreeConstraint in rtree.c has 6 function pointers
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
[FOUND] Struct RtreeGeomCallback in rtree.c has 9 function pointers
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
        int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*)
        int (*xQueryFunc)(sqlite3_rtree_query_info*)
        void (*xDestructor)(void*)
[FOUND] Struct sqlite3_tokenizer_module in fts3_tokenizer.h has 18 function pointers
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
        int (*xCreate)(int argc,                           /* Size of argv array */
    const char *const*argv,             /* Tokenizer argument strings */
    sqlite3_tokenizer **ppTokenizer     /* OUT: Created tokenizer */)
        int (*xDestroy)(sqlite3_tokenizer *pTokenizer)
        int (*xOpen)(sqlite3_tokenizer *pTokenizer,       /* Tokenizer object */
    const char *pInput, int nBytes,      /* Input buffer */
    sqlite3_tokenizer_cursor **ppCursor  /* OUT: Created tokenizer cursor */)
        int (*xClose)(sqlite3_tokenizer_cursor *pCursor)
        int (*xNext)(sqlite3_tokenizer_cursor *pCursor,   /* Tokenizer cursor */
    const char **ppToken, int *pnBytes,  /* OUT: Normalized text for token */
    int *piStartOffset,  /* OUT: Byte offset of token in input buffer */
    int *piEndOffset,    /* OUT: Byte offset of end of token in input buffer */
    int *piPosition      /* OUT: Number of tokens returned before this one */)
        int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid)
[FOUND] Struct Fts5ExtensionApi in fts5.h has 57 function pointers
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
        void * (*xUserData)(Fts5Context*)
        int (*xColumnCount)(Fts5Context*)
        int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow)
        int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken)
        int (*xPhraseCount)(Fts5Context*)
        int (*xPhraseSize)(Fts5Context*, int iPhrase)
        int (*xInstCount)(Fts5Context*, int *pnInst)
        int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff)
        sqlite3_int64 (*xRowid)(Fts5Context*)
        int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn)
        int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken)
        void * (*xGetAuxdata)(Fts5Context*, int bClear)
        int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*)
        void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff)
        int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*)
        void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol)
        int (*xQueryToken)(Fts5Context*, 
      int iPhrase, int iToken, 
      const char **ppToken, int *pnToken)
        int (*xInstToken)(Fts5Context*, int iIdx, int iToken, const char**, int*)
        int (*xColumnLocale)(Fts5Context*, int iCol, const char **pz, int *pn)
[FOUND] Struct fts5_tokenizer_v2 in fts5.h has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_tokenizer in fts5.h has 6 function pointers
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
        int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut)
        void (*xDelete)(Fts5Tokenizer*)
[FOUND] Struct fts5_api in fts5.h has 6 function pointers
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
        int (*xFindTokenizer)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer *pTokenizer)
        int (*xFindTokenizer_v2)(fts5_api *pApi,
    const char *zName,
    void **ppUserData,
    fts5_tokenizer_v2 **ppTokenizer)
[FOUND] Struct sqlite3_rtree_geometry in sqlite3rtree.h has 3 function pointers
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
        void (*xDelUser)(void *)
[FOUND] Struct sqlite3_rtree_query_info in sqlite3rtree.h has 3 function pointers
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)
        void (*xDelUser)(void*)

[DEBUG] Structure search completed
\n[SUMMARY] Found 82 structs with function pointers:
  sqlite3_io_methods: 270 function pointers
  sqlite3_vfs: 225 function pointers
  sqlite3_mem_methods: 105 function pointers
  sqlite3_module: 345 function pointers
  sqlite3_mutex_methods: 135 function pointers
  sqlite3_pcache_methods2: 165 function pointers
  sqlite3_pcache_methods: 150 function pointers
  sqlite3_rtree_geometry: 21 function pointers
  sqlite3_rtree_query_info: 21 function pointers
  Fts5ExtensionApi: 798 function pointers
  fts5_tokenizer_v2: 84 function pointers
  fts5_tokenizer: 84 function pointers
  fts5_api: 84 function pointers
  BusyHandler: 18 function pointers
  sqlite3: 234 function pointers
  FuncDef: 72 function pointers
  FuncDestructor: 18 function pointers
  Module: 18 function pointers
  CollSeq: 36 function pointers
  ParseCleanup: 18 function pointers
  Sqlite3Config: 90 function pointers
  Walker: 54 function pointers
  DbClientData: 18 function pointers
  sqlite3_value: 18 function pointers
  AuxData: 18 function pointers
  BenignMallocHooks: 36 function pointers
  mem: 18 function pointers
  SQLiteThread: 54 function pointers
  sqlite3_kvvfs_methods: 54 function pointers
  PCache: 18 function pointers
  Pager: 54 function pointers
  MemPage: 36 function pointers
  BtShared: 18 function pointers
  sqlite3_api_routines: 4851 function pointers
  sqlite3_tokenizer_module: 108 function pointers
  Overloaded: 18 function pointers
  RtreeConstraint: 36 function pointers
  RtreeGeomCallback: 54 function pointers
  aFunc: 48 function pointers
  aAgg: 36 function pointers
  IcuScalar: 18 function pointers
  sqlite3rbu: 18 function pointers
  SessionHook: 72 function pointers
  sqlite3_session: 18 function pointers
  SessionInput: 18 function pointers
  Builtin: 21 function pointers
  Fts5ExprNode: 21 function pointers
  Fts5ExprFunc: 21 function pointers
  Fts5SegIter: 21 function pointers
  Fts5Iter: 21 function pointers
  PrefixSetupCtx: 42 function pointers
  Fts5Auxiliary: 21 function pointers
  Fts5TokenizerModule: 21 function pointers
  Fts5Auxdata: 21 function pointers
  PorterContext: 21 function pointers
  PorterRule: 21 function pointers
  ReCompiled: 12 function pointers
  vfstrace_info: 12 function pointers
  sqlite3_recover: 12 function pointers
  Func: 12 function pointers
  Jim_HashTableType: 18 function pointers
  Jim_Interp: 3 function pointers
  JimAioFopsType: 15 function pointers
  lsort_info: 3 function pointers
  Jim_ExprOperator: 3 function pointers
  quotaGroup: 12 function pointers
  sqlite3_intarray: 6 function pointers
  aFuncs: 6 function pointers
  aExtension: 6 function pointers
  TclCmd: 6 function pointers
  Thread: 9 function pointers
  SuperlockBusy: 6 function pointers
  WasmTestStruct: 6 function pointers
  vtshim_aux: 6 function pointers
  DState: 6 function pointers
  carray_bind: 6 function pointers
  F5tTokenizerContext: 6 function pointers
  CallbackCtx: 6 function pointers
  OriginTextCb: 6 function pointers
  Stress2Ctx: 3 function pointers
  Stress2Task: 3 function pointers
  ThreadTest: 3 function pointers
  Total function pointers: 9126
\n[INFO] Generating Coccinelle script...
[SUCCESS] Generated Coccinelle script: 3_find_fp_in_struct.cocci
[INFO] Structs to transform: 82
[INFO] Function pointers to convert: 9126
\n[APPROACH] Hybrid method:
  ✓ Python: Struct detection and analysis
  ✓ Coccinelle: Precise code transformation
  ✓ Coccinelle: Assignment extraction
  ✓ Python: Result processing and file generation
\n[USAGE] Apply with:
  spatch --sp-file 3_find_fp_in_struct.cocci --dir /home/bhsus/sqlite/ --in-place
\n[OUTPUT] After execution, check:
  fpName/       - Function candidate lists
  fpNameDecl/   - Function declarations
